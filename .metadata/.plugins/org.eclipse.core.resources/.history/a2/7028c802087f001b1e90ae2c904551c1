package protocol3.commands;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.OfflinePlayer;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import net.md_5.bungee.api.chat.TextComponent;
import protocol3.backend.PlayerMeta;

// funny command haha

public class Admin implements CommandExecutor
{

	public static List<UUID> Spies = new ArrayList<UUID>();
	public static List<UUID> MsgToggle = new ArrayList<UUID>();
	public static List<UUID> UseRedName = new ArrayList<UUID>();

	@Override
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args)
	{
		Player player = (Player) sender;
		if (args.length == 1)
		{
			if (!player.isOp())
			{
				return true;
			}
			if (args[0].toUpperCase().equals("STATS"))
			{
				player.spigot().sendMessage(
						new TextComponent("§cunique players (§eall§c):§7 " + Bukkit.getOfflinePlayers().length));
				player.spigot().sendMessage(new TextComponent(
						"§cunique players (§etracking stats§c):§7 " + PlayerMeta.Playtimes.keySet().size()));
				player.spigot().sendMessage(new TextComponent("§cdonators:§7 " + PlayerMeta._donatorList.size()));
				player.spigot().sendMessage(new TextComponent("§clagfags:§7 " + PlayerMeta._lagfagList.size()));
				String muted = "";
				for (UUID uuid : PlayerMeta._permanentMutes)
				{
					muted = muted + Bukkit.getOfflinePlayer(uuid).getName() + ", ";
				}
				player.spigot().sendMessage(new TextComponent(
						"§cpermanently muted:§7 " + PlayerMeta._permanentMutes.size() + "; " + muted));
				String ops = "";
				for (OfflinePlayer offp : Bukkit.getOperators())
				{
					ops = ops + offp.getName() + ", ";
				}
				player.spigot()
						.sendMessage(new TextComponent("§coperators:§7 " + Bukkit.getOperators().size() + "; " + ops));
				return true;
			} else if (args[0].toUpperCase().equals("COLOR"))
			{
				if (UseRedName.contains(player.getUniqueId()))
				{
					player.spigot().sendMessage(new TextComponent("§6Disabled red name."));
					UseRedName.remove(player.getUniqueId());
				} else
				{
					player.spigot().sendMessage(new TextComponent("§6Enabled red name."));
					UseRedName.add(player.getUniqueId());
				}
				return true;
			} else if (args[0].toUpperCase().equals("SPY"))
			{
				if (Spies.contains(player.getUniqueId()))
				{
					player.spigot().sendMessage(new TextComponent("§6Disabled spying on player messages."));
					Spies.remove(player.getUniqueId());
				} else
				{
					player.spigot().sendMessage(new TextComponent("§6Enabled spying on player messages."));
					Spies.add(player.getUniqueId());
				}
				return true;
			} else if (args[0].toUpperCase().equals("MSGTOGGLE"))
			{
				if (MsgToggle.contains(player.getUniqueId()))
				{
					player.spigot().sendMessage(new TextComponent("§6Enabled recieving player messages."));
					MsgToggle.remove(player.getUniqueId());
				} else
				{
					player.spigot().sendMessage(new TextComponent("§6Disabled recieving player messages."));
					MsgToggle.add(player.getUniqueId());
				}
				return true;
			}
		}
		player.spigot().sendMessage(new TextComponent("§cd2k11: §7Systems Administrator, Developer, Founder"));
		player.spigot().sendMessage(new TextComponent("§cxX_xxX6_9xx_Xx: §7Community Delegate, Financial, Oldfag"));
		player.spigot().sendMessage(new TextComponent("§chaJUNT: §7Community Manager, Oldfag"));
		return true;
	}

}
